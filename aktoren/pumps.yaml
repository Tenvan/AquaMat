fan:
  # Pumpe 1
  - platform: speed
    name: "Dosierpumpe 1"
    restore_mode: ALWAYS_OFF
    id: pump_1
    direction_output: motor_1_dir
    output: motor_1_speed
    on_turn_on:
      - logger.log: "Pump 1 angeschaltet"
      - text_sensor.template.publish:
          id: pump1_status
          state: "ein"

    on_turn_off:
      - logger.log: "Pump 1 ausgeschaltet"
      - text_sensor.template.publish:
          id: pump1_status
          state: "aus"

    on_speed_set:
      - logger.log: "Pump 1 Speed geändert"
      - sensor.template.publish:
          id: pump1_speed
          state: !lambda 'return id(pump_1).speed;'

  # Pumpe 2
  - platform: speed
    name: "Dosierpumpe 2"
    id: pump_2
    restore_mode: ALWAYS_OFF
    direction_output: motor_2_dir
    output: motor_2_speed
    on_turn_on:
      - logger.log: "Pump 2 angeschaltet"
      - text_sensor.template.publish:
          id: pump2_status
          state: "ein"

    on_turn_off:
      - logger.log: "Pump 2 ausgeschaltet"
      - text_sensor.template.publish:
          id: pump2_status
          state: "aus"

    on_speed_set:
      - logger.log: "Pump 2 Speed geändert"
      - sensor.template.publish:
          id: pump2_speed
          state: !lambda 'return id(pump_2).speed;'

  # Pumpe 3
  - platform: speed
    name: "Dosierpumpe 3"
    id: pump_3
    restore_mode: ALWAYS_OFF
    direction_output: motor_3_dir
    output: motor_3_speed
    on_turn_on:
      - logger.log: "Pump 3 angeschaltet"
      - text_sensor.template.publish:
          id: pump3_status
          state: "ein"

    on_turn_off:
      - logger.log: "Pump 3 ausgeschaltet"
      - text_sensor.template.publish:
          id: pump3_status
          state: "aus"

    on_speed_set:
      - logger.log: "Pump 3 Speed geändert"
      - sensor.template.publish:
          id: pump3_speed
          state: !lambda 'return id(pump_3).speed;'
